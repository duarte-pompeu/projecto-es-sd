package pt.tecnico.bubbledocs.dml;

class BubbleDocs {
    Integer idCounter;
}

class User{
	String userName;
	String name;
	String password;
}

class SuperUser extends User;

class CalcSheet{
	Integer id;
	String name;
	Integer lines;
	Integer columns;
	LocalDate date;
}

class Cell {
  Integer id;
  Integer line;
  Integer column;
  Boolean protect;
  String contentRepresentation;
}

class Content;

class FunctionArgument extends Content;


class Reference extends FunctionArgument;

class Literal extends FunctionArgument{
  Integer val;
}

class Function extends Content;

class BinaryFunction extends Function;

class RangeFunction extends Function;

class Add extends BinaryFunction;
class Sub extends BinaryFunction;
class Mul extends BinaryFunction;
class Div extends BinaryFunction;

class Avg extends RangeFunction;
class Prd extends RangeFunction;
class Range;


relation DomainRootHasBubbleDocsApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  BubbleDocs playsRole bubbledocs {
    multiplicity 0..1;
  }
}

relation BubbleDocsHasUsers {
  BubbleDocs playsRole bubbleDocs;
  User playsRole user {
    multiplicity *;
  }
}

relation BubbleDocsHasCalcSheets {
  BubbleDocs playsRole bubbleDocs;
  CalcSheet playsRole calcSheet {
    multiplicity *;
  }
}

relation UserCreatesCalcSheet {
  CalcSheet playsRole createdCalcSheet{
    multiplicity *;
  }
  User playsRole creator;
}

relation CalcSheetHasReadPermitionsAboutUsers {
  CalcSheet playsRole readableCalcSheet {
    multiplicity *;
  }	  
  User playsRole readingUser{
    multiplicity *;
  }
}

relation CalcSheetHasWritePermitionsAboutUsers {
  CalcSheet playsRole writeableCalcSheet {
    multiplicity *;
  }
  User playsRole writingUser{
    multiplicity *;
  }
}

relation CalcSheetOwnsCells {
  CalcSheet playsRole calcSheet;
  Cell playsRole cell {
    multiplicity *;
  }
}

relation CellOwnsContent {
	Cell playsRole cell;
	Content playsRole content;
}

relation ReferencePointsToCell{
	Reference playsRole reference;
	Cell playsRole pointedCell;
}


relation BinaryFunctionHasArgument1{
	BinaryFunction playsRole binaryFunction_;
	FunctionArgument playsRole argument1;
}

relation BinaryFunctionHasArgument2{
	BinaryFunction playsRole binaryFunction;
	FunctionArgument playsRole argument2;
}

relation RangeFunctionHasRange{
	RangeFunction playsRole rangeFunction;
	Range playsRole range;
}

relation RangeHasLeftUpLimit{
	Range playsRole range;
	Cell playsRole leftUpCell;
}	

relation RangeHasRightDownLimit{
	Range playsRole range_;
	Cell playsRole RightDownCell;
}	

relation RangePointsToCalcSheet{
	Range playsRole range;
	CalcSheet playsRole calcSheet;
}


